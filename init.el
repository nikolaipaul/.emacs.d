;;;; Packaging

; list the packages you want
(setq package-list '(exec-path-from-shell counsel intero))

; list the repositories containing them
(setq package-archives '(("elpa" . "http://tromey.com/elpa/")
			 ("melpa" . "https://stable.melpa.org/packages/")))

; activate all the packages (in particular autoloads)
(package-initialize)

; Fetch the list of packages available 
(unless package-archive-contents
  (package-refresh-contents))

; install the missing packages
(dolist (package package-list)
  (unless (package-installed-p package)
    (package-install package)))

;;;; Editor

; Hide emacs splash screen
(setq inhibit-startup-screen t)

;; Dark emacs theme
(load-theme 'deeper-blue)

; Hide vertical scroll bar
(toggle-scroll-bar -1)

; Hide emacs GUI menu
(tool-bar-mode -1)

; Make font a little bit bigger
(set-face-attribute 'default nil :height 130)

; Use left alt for meta and right alt for macos 
(setq ns-alternate-modifier 'meta)
(setq ns-right-alternate-modifier 'none)

;; Same PATH environment for emacs gui/terminal
(when (memq window-system '(mac ns x))
  (exec-path-from-shell-initialize))

; Auto close braces, brackets, ...
(electric-pair-mode 1)
			
; Show vertical lines to guide indentation
; https://github.com/zk-phi/indent-guide
(require 'indent-guide)
(indent-guide-global-mode)

; Ivy completion framework
; https://writequit.org/denver-emacs/presentations/2017-04-11-ivy.html#orgc2d4898
(ivy-mode 1)

; Insert newline when cursor hits end of buffer
(setq next-line-add-newlines t)

; Bind Escape to control
(setq mac-command-modifier 'control)
					
; https://www.emacswiki.org/emacs/WindMove
; Move between buffers with shift+arrows
(when (fboundp 'windmove-default-keybindings)
  (windmove-default-keybindings))

; Drag stuff around
; https://github.com/rejeep/drag-stuff.el
(drag-stuff-global-mode 1)
(drag-stuff-define-keys)

;;;; Custom Keys

; Duplicate a line
(global-set-key "\C-c\C-d" "\C-a\C- \C-n\M-w\C-y")


;;;; Languages and Formats

; Projectile
(projectile-mode +1)
(define-key projectile-mode-map (kbd "s-p") 'projectile-command-map)
(define-key projectile-mode-map (kbd "C-c p") 'projectile-command-map)

; Haskell
(add-hook 'haskell-mode-hook 'intero-mode)


;;;; Autogenerated

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(ansi-color-names-vector
   ["#242424" "#e5786d" "#95e454" "#cae682" "#8ac6f2" "#333366" "#ccaa8f" "#f6f3e8"])
 '(package-selected-packages
   (quote
    (projectile drag-stuff indent-guide evil shakespeare-mode yaml-mode intero haskell-mode exec-path-from-shell counsel)))
 '(safe-local-variable-values
   (quote
    ((haskell-process-use-ghci . t)
     (haskell-indent-spaces . 4)))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

